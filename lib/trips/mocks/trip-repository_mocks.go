// Automatically generated by MockGen. DO NOT EDIT!
// Source: ..\src\github.com\ekyoung\personal-site-go\lib\trips\trip-repository.go

package mock_trips

import (
	gomock "github.com/golang/mock/gomock"

	"github.com/ekyoung/personal-site-go/lib/trips"
)

// Mock of TripRepository interface
type MockTripRepository struct {
	ctrl     *gomock.Controller
	recorder *_MockTripRepositoryRecorder
}

// Recorder for MockTripRepository (not exported)
type _MockTripRepositoryRecorder struct {
	mock *MockTripRepository
}

func NewMockTripRepository(ctrl *gomock.Controller) *MockTripRepository {
	mock := &MockTripRepository{ctrl: ctrl}
	mock.recorder = &_MockTripRepositoryRecorder{mock}
	return mock
}

func (_m *MockTripRepository) EXPECT() *_MockTripRepositoryRecorder {
	return _m.recorder
}

func (_m *MockTripRepository) All() []*trips.Trip {
	ret := _m.ctrl.Call(_m, "All")
	ret0, _ := ret[0].([]*trips.Trip)
	return ret0
}

func (_mr *_MockTripRepositoryRecorder) All() *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "All")
}

func (_m *MockTripRepository) Lookup(_param0 string) *trips.Trip {
	ret := _m.ctrl.Call(_m, "Lookup", _param0)
	ret0, _ := ret[0].(*trips.Trip)
	return ret0
}

func (_mr *_MockTripRepositoryRecorder) Lookup(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Lookup", arg0)
}
