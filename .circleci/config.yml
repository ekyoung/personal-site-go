version: 2.1
executors:
  go:
    docker:
      - image: cimg/go:1.19
    working_directory: ~/repo
orbs:
  aws-cli: circleci/aws-cli@3.1.4
  aws-code-deploy: circleci/aws-code-deploy@2.0.0
jobs:
  build:
    executor: go
    steps:
      - checkout
      - restore_cache:
          keys:
            - go-mod-v4-{{ checksum "go.sum" }}
      - run:
          name: Install Dependencies
          command: go get ./...
      - save_cache:
          key: go-mod-v4-{{ checksum "go.sum" }}
          paths:
            - "/go/pkg/mod"
      - run:
          name: Build the server
          command: go build
      - persist_to_workspace:
          root: .
          paths:
            - personal-site-go
  test:
    executor: go
    steps:
      - checkout
      - restore_cache:
          keys:
            - go-mod-v4-{{ checksum "go.sum" }}
      - run:
          name: Install Dependencies
          command: go get ./...
      - save_cache:
          key: go-mod-v4-{{ checksum "go.sum" }}
          paths:
            - "/go/pkg/mod"
      - run:
          name: Run tests
          command: go test ./...
  deploy:
    working_directory: ~/repo
    executor: aws-cli/default
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run:
          name: Copy CodeDeploy content
          command: |
            mkdir ./code-deploy/content
            cp ./personal-site-go ./code-deploy/content/
            cp -r ./browser/ ./code-deploy/content/
            find ./server -name \*.tmpl -exec cp --parent '{}' "./code-deploy/content/" ";"
      - aws-cli/setup
      - aws-code-deploy/push-bundle:
          application-name: personal-site-go
          bundle-bucket: ethan-young-code-deploy-us-west-2
          bundle-key: personal-site-go/production/<< pipeline.git.tag >>
          bundle-source: ./code-deploy
      - aws-code-deploy/deploy-bundle:
          application-name: personal-site-go
          bundle-bucket: ethan-young-code-deploy-us-west-2
          bundle-key: personal-site-go/production/<< pipeline.git.tag >>
          deployment-config: CodeDeployDefault.OneAtATime
          deployment-group: production

workflows:
  version: 2
  build_test_deploy:
    jobs:
      - build:
          filters:  # required since `test` has tag filters AND requires `build`
            tags:
              only: /^\d{4}\.\d{2}\.\d{2}\.\d{2}.*/
      - test:
          requires:
            - build
          filters:  # required since `deploy` has tag filters AND requires `test`
            tags:
              only: /^\d{4}\.\d{2}\.\d{2}\.\d{2}.*/
      - deploy:
          requires:
            - test
          filters:
            tags:
              only: /^\d{4}\.\d{2}\.\d{2}\.\d{2}.*/
            branches:
              ignore: /.*/